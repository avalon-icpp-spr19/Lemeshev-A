Здесь хранятся письменные ответы на задания.

Задание 1
Объявите массив для хранения 10-ти целочисленных элементов
int mass[10]{};
Объявите константный массив для хранения 20-ти вещественных элементов
const float mass[20]{};
Объявите массив для хранения 2-х символьных элементо
char mass[2]{};

Пусть есть массив объявленный следующим образом:
int data[6] = { 2, 4, 8, 16, 32, 64 };
Какой размер имеет данный массив?
6 элементов.
Данные какого типа он хранит?
целочисленные (integer)
Чему равен элемент массива с индексом 0?
2
Чему равен элемент массива с индексом 3?
16
Какой индекс у элемента 8?
2
Какой индекс у элемента 32?
4
Присвойте первому элементу массива значение 1.
data[0]=1;
Утройте значение последнего элемента в массиве.
data[5]*=3
Выведите элементы массива на экран через пробел.
for(int i=0; i<6; ++i)
{
std::cout<<mass[i]<<' ';
}


Можно ли не указывать размер массива при его создании?
Нет, размер массива обязательно должен быть известен ещё на моменте компиляции, иначе всё в стеке, а следовательно, и в программе полетит к херам.
Если можно, то продемострируйте это.


Пусть массив объявили следующим образом:
int data[5] = { 1, 2 }
Каков размер данного массива?
5 элементов
Чему равен элемент с индексом 1? 
2
Чему равен элемент с индексом 2?
0
Проверьте ответы с помощью дебагера.
Выведите все элементы массива на экран.
Уже делалось выше, прописывать снова нет смысла.
Пусть массив объявлен следующим образом:
const char alpha[3] = { 'a', 'b', 'c' }
Каков размер данного массива?
3 элемента
Чему равен элемент с индексом 0? 
a
Чему равен индекс у элемента 'c'?
2
Допустимы ли следующие выражения:
alpha[0];да, но само по себе не имеет смысла.
alpha[3];да, но значение вне границ массива, вы получите мусор из стека.
alpha[1] = 'd';да
alpha[1] = 'b';да
Выведите все элементы массива на экран.
Уже делалось выше, прописывать снова нет смысла.
======================================================================================
Задание 2
Объявите массив для хранения переменных типа int размером 20; 
int mass[20]
Запишите в объявленный массив первые 20 натуральных чисел в порядке возрастания
for (int i = 0; i<20; ++i)
{
mass[i]=i+1;
}
Выведите все элементы массива на экран 
for(int i=0; i<20; ++i)
{
std::cout<<mass[i]<<' ';
}
Запишите в этот же массив первые 20 четных чисел в порядке возрастания
for (int i = 0; i<20; ++i)
{
mass[i]=(i*2)+2;
}
Выведите все элементы массива на экран
Уже делалось выше, прописывать снова нет смысла.
Запишите в этот же массив первые 20 степеней двойки (2^0, 2^1, ... , 2^19). Функцию pow не использовать
mass[0]=1
for (int i = 1; i<20; ++i)
{
mass[i]=mass[i-1]*2;
}
Выведите все элементы массива на экран по 5 элементов в одной строке
for (int i = 0; i < 4; ++i)
{
    for (int e = 0; e < 5; ++e)
    {
    std::cout << mass[(5 * i) + e] << ' ';
    }
std::cout<<std::endl;
}
Занулите в предыдущем массиве все элементы с нечетным индексом (i = 1, 3, ..., 19);
for (int i = 1; i<20; i += 2)
{
    mass[i] = 0;
}
Выведите все элементы массива на экран по 5 элементов в одной строке
Уже делалось выше, прописывать снова нет смысла.
==========================================================================
Объявите двумерный массив размером 4х2 любого типа и проинизиализируете его с помощью списка инициализации
Можно ли не указывать размер двумерного массива при его создании ?
Если можно, то продемострируйте это.
Пусть массив объявили следующим образом :
int data[][4] = { {1, 2}, {3,4,5} }
Каков размер данного массива ?
2*4=8 элементов
Чему равен элемент data[0][0] ?
1
Чему равен элемент data[1][2] ?
5
Проверьте ответы с помощью дебагера.
Увеличьте в два раза каждый элемент в данном массиве.
Выведите все элементы массива на экран.
Использовать циклы for
for (int i = 0; i < 2; ++i)
{
	for (int j = 0; j < 4; ++j)
	{
		std::cout << mass[i][j] << '|';
	}
}

