Задание №1
int val = 10;
выведите адрес переменной val
0X000000000024F624
создайте указатель для хранения адреса переменной val
сохраните адрес переменной val в созданный указатель
int *x = & val;
выведите значение переменной val, используя указатель
std::cout << *x << std::endl;
=======================================================
Пусть объявлены следующие переменные:
unsigned int a = 5U;
double b = 0.8;
const float f = 0.5F;
const long long ll = 123LL;
Объявите и проинициализируйте указатели на вышеобъявленные переменные.
unsigned int *p1 = & a;
double *p2 = & b;
const float *p3 = & f;
const long long *p4 = & ll;
Какой размер имеют объявленные указатели? Проверьте с помощью оператора sizeof
p1-4
p2-8
p3-4
p4-8
С помощью объявленных указателей:
увеличьте значение переменной a на 1
*p1+=1;
присвойте переменной b значение 0.25
*p2=0.25
выведите удвоенное значение переменной f
std::cout<<*p3*2;
выведите посчитайте остаток от деления на 10 переменной ll
std::cout<<*p4 % 10;
=========================================================
Задание №2
Что выведет на экран следующий код?
Прокоментируйте каждую строку, запишите промежуточные значения переменных.
#include <iostream>
Подключаем библиотеку iostream для работы с консолью.
using namespace std;
Включаем использование пространства имён std по умолчанию.
int main()
{
	int t[4] = {8,4,2,1}; инициализируем массив t типа int 4 значениями - 8, 4, 2, 1
	int *p1 = t + 2, *p2 = p1 - 1; Обявляем указатели так, что p1 - 3 элемент массива, а P2 - второй.
	p1++; прибавляем к адресу p1 ещё один шаг, из-за чего он теперь указывает на последний, 4 элемент.
	cout << *p1 - t[p1 - p2] << endl; из 4 элемента вычитаем элемент с индексом, равным количеству переменных типа int, которые
можно всунуть между первым и последним эелементами, а именно два, так что из 1 вычитается 2 и ответ = -1. Результат выводится в консоль. 
}
int data[] = {1,2,3,4,5};
Объявите указатель на первый элемент массива
int *p1 = & data;
С помощью цикла for и объявленного указателя выведите каждый элемент массива в консоль.

С помощью цикла for и объявленного указателя увеличьте каждый элемент массива в 2 раза
и посчитайте сумму получившихся элементов массива.
Выведите полученный результат.

	int data[] = { 1,2,3,4,5 };
		int *p1 = data;
		int sum = 0;
		for (int i = 0; i <= 4; ++i)
		{
			std::cout << *(p1 + i);
			*(p1 + i) *= 2;
				sum += *(p1 + i);
		}
		std::cout <<std::endl<< sum;
	return 0;
========================================================
Задание третье.

#include <iostream>
#include "extenction.h"
int main()
{
	setlocale(0, "");
	int mass[20];
	int *pt = mass;
	int *ptm=pt;
	
	for (int i=0; i<20; ++i )
	{
		*(pt+i) = ext::GetRandomValue(-100, 100);
		std::cout << *(pt+i)<< ' ';
	}
	for (int i = 1; i <= 20; ++i)
	{
		if (*(pt + i) > *ptm) { ptm = pt+i; }
	}
	std::cout <<std::endl<< "Максимальный элемент = "<< *ptm << " с индексом " << ptm-pt;
	return 0;
}
=========================================================
Задание четвёртое.

#include <iostream>
int main()
{
	setlocale(0, "");
	char data[] = "abcdefghijklmnopqrstuvwxyz";
const int x = 27 //array's length;
	char *pt = data;
	char *ptans = pt;
    char input;
	bool flag=false;
	std::cout << "Введите символ. Если есть такой в строке, вы получите его индекс+1. Если его нет, вы получите -1."<<std::endl;
    std::cin >> input;
	for (int i = 0; i < x; ++i)
	{
		if (input == *(pt + i)) { flag = true; ptans=pt+i; break; }
	}
	if (flag)
	{
		std::cout << ptans-pt+1;
	}
	else
	{
		std::cout << -1;
	}
	return 0;
}
==========================================================
Задание пятое.

#include <iostream>
#include "extenction.h"
int main()
{
	setlocale(0, "");
	char line1[256];
	char *pt1 = line1;
	char line2[256];
	char *pt2 = line2;
	bool flag = false;
	std::cout << "Ввдите две строки длиной не более 256 символов и узнайте, одинаковы ли они(1-да, 0-нет).";
	std::cin.getline(line1, 256);
	std::cin.getline(line2, 256);
	for (int i = 0; i < 256; ++i)
	{
		if (*(pt1 + i) != *(pt2 + i)) { flag = true; break; }
	}
	if (flag)
	{
		std::cout << 0;
	}
	else
	{
		std::cout << 1;

	}
	return 0;
}